version: '3.8'

services:
  
###> doctrine/doctrine-bundle ###
  MySQL:
    image: mysql:8.3
    #container_name: MySQL
    # always = toujour redemarrer, unless-stopped = à moins d'être arrêté
    restart: unless-stopped
    ports:
      - 3306:3306
    command: --default-authentication-plugin=mysql_native_password
    environment:
      #MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: Gs_Forum
    #volumes:
    volumes:
      - MySQL_data:/var/lib/mysql # Data Volume
      #- ./var:/var/www/var # Data Image
      #- ./tools/MySQL_database:/var/lib/mysql # Data Local
    
  #database:
    #image: postgres:${POSTGRES_VERSION:-16}-alpine
    #container_name: Postgres
    #environment:
    #  POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
    #  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
    #  POSTGRES_USER: ${POSTGRES_USER:-app}
    #healthcheck:
    #  test: ["CMD", "pg_isready -U ${POSTGRES_USER:-app}"]
    #  timeout: 5s
    #  retries: 5
    #  start_period: 60s
    #volumes:
    #  - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

  #Php:
  #  image: php:8.3-fpm
  #  container_name: Php
  #  #depends_on:
  #  #  - MySQL
  #  restart: unless-stopped
  #  volumes:
  #    - .:/var/www:delegated
  #  environment:
  #    APP_ENV: dev   

  #php-apache:
  #  build:
  #    context: ./tools/docker/php
  #    dockerfile: Dockerfile
  #  container_name: php-apache
    #depends_on:
    #  - MySQL
  #  restart: unless-stopped
  #  ports:
  #    - 80:80
  #  volumes:
  #    - .:/var/www:delegated
  #    - ./tools/docker/apache2/vhosts:/etc/apache2/sites-enabled
  #  environment:
  #    APP_ENV: dev   

  #Apache:
  #  image: httpd:2.4.58
  #  container_name: Apache
  #  restart: unless-stopped
  #  depends_on:
  #    - "Php"
  #  volumes:
  #    - .:/var/www:delegated
  #    - ./tools/docker/apache2/httpd.conf:/usr/local/apache2/conf/httpd.conf
  #    - ./tools/docker/apache2/extra/httpd-vhosts.conf:/usr/local/apache2/conf/extra/httpd-vhosts.conf
  #    #- ./tools/docker/apache2:/usr/local/apache2/conf
  #  ports:
  #    - 80:80
  #  links:
  #    - "Php"

  #Nginx:
  #  image: nginx
  #  container_name: Nginx
  #   always = toujour redemarrer, unless-stopped = à moins d'être arrêté
  #  restart: no
  #  volumes:
  #    - .:/var/www:delegated
      #- ./tools/docker/nginx.conf:/etc/nginx/conf.d/default.conf
  #    - ./tools/docker/nginx:/etc/nginx/conf.d/
  #  ports:
  #    - 80:80
  #  links:
  #    - "Php"

  PhpMyAdmin:
    image: phpmyadmin:5.2.1-apache
    #container_name: PhpMyAdmin
  #   always = toujour redemarrer, unless-stopped = à moins d'être arrêté
    restart: unless-stopped
    depends_on:
      - MySQL
    ports:
      - 8080:80
    environment:
      PMA_ARBITRARY: 1
      PMA_HOST: MySQL
      PMA_USER: root
      PMA_PASSWORD: root
    #volumes:
      #- ./tools/phpmyadmin/config.user.inc.php:/etc/phpmyadmin/config.user.inc.php
  
  #adminer:
  #  image: adminer
  #  restart: always
  #  ports:
  #    - 8080:8080

networks:
  dev:

volumes:
###> doctrine/doctrine-bundle ###
  #database_data:
  MySQL_data:
###< doctrine/doctrine-bundle ###